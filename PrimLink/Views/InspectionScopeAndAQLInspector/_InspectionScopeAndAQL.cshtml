@using Model.Common.Helper;
@using Model.Entity;
@model InspectionScopeAndAQLModel

<form asp-controller="InspectionScopeAndAQL" asp-action="InsertUpdateInspectionScopeAndAQL" id="InspectionScopeAndAQLForm" data-ajax="true" data-ajax-failure="onFailure" data-ajax-success="onSuccess" kendo-validator="true" method="post" asp-antiforgery="true">
    @Html.HiddenFor(x => x.Id, new { id = "Id" })
    @Html.HiddenFor(x => x.UserId, new { id = "userId" })
    @Html.HiddenFor(x => x.UserFormId, new { id = "userFormId" })
    @Html.HiddenFor(x => x.IsAdmin, new { id = "isAdmin" })
    @Html.HiddenFor(x => x.IsFunctionCheck, new { id = "isFunctionCheck" })
    @Html.HiddenFor(x => x.IsQuantityCheck, new { id = "isQuantityCheck" })
    @Html.HiddenFor(x => x.IsPkgePackShipCheck, new { id = "isPkgePackShipCheck" })
    @Html.HiddenFor(x => x.IsProductLabelCheck, new { id = "isProductLabelCheck" })
    @Html.HiddenFor(x => x.IsDimensionCheck, new { id = "isDimensionCheck" })
    @Html.HiddenFor(x => x.IsOnSiteTest, new { id = "isOnSiteTest" })
    <div class="col-lg-12">
        <h1 style="font-weight:bold">Inspection Scope and AQL</h1>
        <h3 style="font-weight:bold">Inspection Scope</h3>
        <br />
        <div class="row">
            <div class="col-lg-6">
                <label>Workmanship and Basic Function Check</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsFunctionCheck)
                        .Checked(Model != null ? Model.IsFunctionCheck == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus8"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
            <div class="col-lg-6">
                <label>Quantity Check</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsQuantityCheck)
                        .Checked(Model != null ? Model.IsQuantityCheck == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus9"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-6">
                <label>Packaging/Packing/Shipping Marks</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsPkgePackShipCheck)
                        .Checked(Model != null ? Model.IsPkgePackShipCheck == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus10"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
            <div class="col-lg-6">
                <label>Product Labeling/Marking and Other Specifications Check</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsProductLabelCheck)
                        .Checked(Model != null ? Model.IsProductLabelCheck == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus11"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-lg-6">
                <label>Dimensions & Weight Check</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsDimensionCheck)
                        .Checked(Model != null ? Model.IsDimensionCheck == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus12"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
            <div class="col-lg-6">
                <label>Specific On Site Tests</label>
                <div class="form-group">
                    @(Html.Kendo().SwitchFor(m => m.IsOnSiteTest)
                        .Checked(Model != null ? Model.IsOnSiteTest == true ? true : false : false)
                        .Events(ev => ev.Change("onChangeStatus13"))
                        .HtmlAttributes(new { style = "width:100px;" })
                        .Messages(c => c.Checked("Yes").Unchecked("No"))
                        
                        )
                </div>
            </div>
        </div>
        <br />
        <h3 style="font-weight:bold">Quantity To Inspect per day</h3>
        <br />
        <div class="row">
            <div class="col-lg-6">
                <label>
                    Based on experience,
                    how many pieces can be inspected in 1 day of work?
                </label>
                <div class="form-group">
                    @(Html.Kendo().NumericTextBoxFor(x => x.PiecesInspected)
                        .Min(0)
                        .HtmlAttributes(new { style = "width: 100%;", @class = "w-60", id = "PiecesInspected", required = "required", ValidationMessage = "Please enter Mininum Pieces Inspected" })
                        
                        )
                </div>
            </div>
        </div>
        <br />
        <h3 style="font-weight:bold">Sampling</h3>
        <br />
        <div class="row">
            <div class="col-lg-6">
                <label>Choose Your Sampling Plan</label>
                <div class="form-group">
                    @(Html.Kendo().TextBoxFor(m => m.SamplePlan)
                        .Placeholder("Enter Sample Plan")
                        .HtmlAttributes(new { @class = "w-100", required = "required", ValidationMessage = "Please Enter Sample Plan", id = "SamplePlan" })
                        
                        )
                </div>
            </div>
            <div class="col-lg-6">
                <label>Sampling Size</label>
                <div class="form-group">
                    @(Html.Kendo().TextBoxFor(m => m.SampleSize)
                        .Placeholder("Enter Sample Size")
                        .HtmlAttributes(new { @class = "w-100", required = "required", ValidationMessage = "Please Enter Sample Size", id = "SampleSize" })
                        
                        )
                </div>
            </div>
        </div>
        <br />
        <h3 style="font-weight:bold">Acceptable Quality Limits</h3>
        <br />
         <div class="row">
            <div class="col-lg-4">
                <label>For Critical Defects</label>
                <div class="form-group">
                    @(Html.Kendo().NumericTextBoxFor(x => x.CriticalDefects)
                        .Min(0)
                        .HtmlAttributes(new { style = "width: 100%;", @class = "w-60", id = "CriticalDefects", required = "required", ValidationMessage = "Please enter Critical Defects" })
                        
                        )
                </div>
            </div>
            <div class="col-lg-4">
                <label>For Major Defects</label>
                <div class="form-group">
                    @(Html.Kendo().NumericTextBoxFor(x => x.MajorDefects)
                        .Min(0)
                        .HtmlAttributes(new { style = "width: 100%;", @class = "w-60", id = "MajorDefects", required = "required", ValidationMessage = "Please enter Major Defects" })
                        
                        )
                </div>
            </div>
            <div class="col-lg-4">
                <label>For Minor Defects</label>
                <div class="form-group">
                    @(Html.Kendo().NumericTextBoxFor(x => x.MinorDefects)
                        .Min(0)
                        .HtmlAttributes(new { style = "width: 100%;", @class = "w-60", id = "MinorDefects", required = "required", ValidationMessage = "Please enter Minor Defects" })
                        
                        )
                </div>
            </div>
        </div>
        <div class="row" style="float:right">
            <div class="col-md-12" id="eventBtns">
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        $("form").kendoValidator();
    });
</script>

<script src="~/js/pages/User/User.js" asp-append-version="true"></script>