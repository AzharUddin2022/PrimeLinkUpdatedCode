@using Model.Entity
@model UserModel
@{
    ViewData["Title"] = "Admin Panel";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Dashboard
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-xs-6">
                <!-- small box -->
                <div class="small-box bg-aqua">
                    <div class="inner">
                        <h3>@ViewBag.Users</h3>

                        <p>Users</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-xs-6">
                <!-- small box -->
                <div class="small-box bg-yellow">
                    <div class="inner">
                        <h3>@ViewBag.Inspectors</h3>

                        <p>Inspectors</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- /.row -->
        <!-- Main row -->
        <div class="row">
            <div class="col-md-12">
                @(Html.Kendo().Grid<UserModel>()
                    .Name("UserGrid")
                    .ClientDetailTemplateId("template")
                    .Columns(columns =>
                    {
                        columns.Command(command =>
                        {
                            command.Custom("Edit").Text("").IconClass("icon-pencil7").Click("editUser")
                            .HtmlAttributes(new { title = "Edit", data_toggle = "tooltip", @class = "grid-edit-icon c_blue" }).Visible("isDestroyVisible");
                            command.Custom("Delete").Text("").IconClass("icon-cancel-square").Click("deleteUser")
                            .HtmlAttributes(new { title = "Delete", data_toggle = "tooltip", @class = "grid-trash-icon c_theme" }).Visible("isDestroyVisible");
                        }).Width(40).Title("Action");
                        columns.Bound(reason => reason.Id).Hidden(true);
                        columns.Bound(reason => reason.FirstName).Title("First Name").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                        columns.Bound(reason => reason.LastName).Title("Last Name").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                        columns.Bound(reason => reason.UserName).Title("Username").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                        columns.Bound(reason => reason.Email).Title("Email Address").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                        columns.Bound(reason => reason.RoleName).Title("Role").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                        columns.Bound(reason => reason.Status).Title("Status").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40).ClientTemplate("<span id='badge_#=Role#' class='badgeTemplate'></span>"); ;
                    })
                    .Pageable()
                    .Scrollable()
                    .Resizable(x => x.Columns(true))
                    .ToolBar(e =>
                    {
                        e.Custom().Text("Add User").HtmlAttributes(new { id = "addUser", @class = "floatRight" });
                        e.Excel().Text("Export to Excel").HtmlAttributes(new { id = "excel", @class = "floatRight" });
                    })
                    .Excel(excel => excel
                    .FileName("UserList.xlsx")
                    .Filterable(true)
                    .AllPages()
                    .ProxyURL(Url.Action("Excel_Export_Save", "Admin")))
                    .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
                    .HtmlAttributes(new { style = "height:100%;" })
                    .Events(events => events.DataBound("onDataBound"))
                    .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(8)
                    .ServerOperation(false)
                    .Read(read => read.Action("GetUserGrid", "Admin")))
                    .NoRecords(true)
                    )

            </div>
        </div>
        <!-- /.row (main row) -->

    </section>
    <!-- /.content -->
</div>

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<UserFormModel>()
            .Name("grid_#=Id#")
            .Selectable()
            .Columns(columns =>
            {
                columns.Command(command =>
                {
                    command.Custom("Delete").Text(" ").IconClass("icon-cancel-square").Click("deleteUser1")
                    .HtmlAttributes(new { title = "Delete", data_toggle = "tooltip", @class = "grid-trash-icon c_theme" });
                }).Width(15).Title("Action");
                columns.Bound(reason => reason.Id).Hidden(true);
                columns.Bound(reason => reason.MissionReference).Title("Mission Reference").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                columns.Bound(reason => reason.ProductLine).Title("Product Line").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(25);
                columns.Bound(reason => reason.ProductCategory).Title("Product Category").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
                columns.Bound(reason => reason.QuantityUnit).Title("Quantity Unit").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(30);
                columns.Bound(reason => reason.DestinationCountry).Title("Destination Country").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(30);
                columns.Bound(reason => reason.ServiceDate).Title("Service Date").Format("{0:MM/dd/yyyy}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(25);
                columns.Bound(reason => reason.ShipmentDate).Title("Shipment Date").Format("{0:MM/dd/yyyy}").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(25);
                columns.Bound(reason => reason.Approved).Title("Approved").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(20);
                columns.Bound(reason => reason.InspectorName).Title("Inspector Name").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").ShowOperators(false).SuggestionOperator(FilterType.Contains))).Width(40);
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("GetUserFormGridAdmin", "Home", new { userId = "#=Id#" }))
            )
            .Pageable()
            .Resizable(x => x.Columns(true))
            .Sortable()
            .Events(ev => ev.Change("onRowSelect"))
            .ToClientTemplate()
    )
</script>

@(Html.Kendo().Window()
.Name("AddEditUser")
.Title("")
.Draggable(false)
.Width(800)
.Modal(true)
.Visible(false)
)

<script src="~/js/pages/Admin/Admin.js" asp-append-version="true"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>



